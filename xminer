from asyncio import sleep
from .. import loader, utils
import asyncio
import time
from telethon.tl.types import Message, ChatAdminRights
from telethon import functions, TelegramClient, errors
from ..inline.types import InlineCall
import inspect


@loader.tds
class xMiner(loader.Module):
    '''–ú–æ–¥—É–ª—å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –≤ MineEVO'''
    strings = {
        "name" : "xMiner"
    }

    async def client_ready(self,client, db):
        self.client = client
        self.hmtk = False
        self.tttk = False
        self.bb = False
        self.combo = True
        self.mine = False
        self.last_kop_time = time.time()
        s = self.get('dly')
        if s == None:
            self.set('dly', 1.0)
        s = self.get('mm')
        if s == None:
            self.set('mm', False)
        s = self.get('agas')
        if s == None:
            self.set('agas', False)
        s = self.get('fw')
        if s == None:
            self.set('fw', False)
        s = self.get('fwa')
        if s == None:
            self.set('fwa', False)
        s = self.get('dely')
        if s == None:
            self.set('dely', 1.0)

        s = self.get('autk')
        if s == None:
            self.set("autk", False)
    @loader.command()
    async def atk(self,message):
        '''–í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ–∞—Ç–∞–∫—É'''
  
        args = utils.get_args_raw(message)
        cmd = f'{utils.escape_html(self.get_prefix())}{inspect.currentframe().f_code.co_name}'
        if args:
            cmd = f'{utils.escape_html(self.get_prefix())}{inspect.currentframe().f_code.co_name} {utils.get_args_raw(message)}'
        try:
            args = float(args)
            self.set('dely', args)
            await utils.answer(message, f"<emoji document_id=5332533929020761310>‚úÖ</emoji><b> –ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {args}</b> ")
        except ValueError:
            self.set('autk', not self.get('autk'))
            if self.get('autk'):
                await utils.answer(message, "<b><emoji document_id=5463277406435422003>üó°</emoji> –ê–≤—Ç–æ–∞—Ç–∞–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞</b>")
            else:
                await utils.answer(message, "<b><emoji document_id=5463277406435422003>üó°</emoji> –ê–≤—Ç–æ–∞—Ç–∞–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–æ</b>")

    @loader.watcher()
    async def watcher(self, message):
        dely = self.get('dely', None)
        if message.chat_id == 5522271758 and "üî∂ –¢—ã –≤—ã–±—Ä–∞–ª –±–æ—Å—Å–∞" in message.raw_text:
            if self.get('autk'):
                self.tttk = True
                if not self.hmtk:
                    self.hmtk = True
                    if self.get('autk'):
                        while self.tttk:
                            await self.client.send_message("@mine_evo_bot", "–ê—Ç–∫")
                            await asyncio.sleep(dely)
                            try:
                                pass  # –ó–¥–µ—Å—å –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–∫–∏ FloodWait
                            except errors.FloodWaitError as f:
                                self.tttk = False
                                se = f.seconds 
                                see = se + 5
                                if self.get('fwa'):
                                    await asyncio.sleep(see)
                                    await self.set('tttk', True)
                        else:
                            self.hmtk = False   
        if message.chat_id == 5522271758 and "–¥–ª—è –∞—Ç–∞–∫–∏ –≤—ã–±–µ—Ä–∏ –±–æ—Å—Å–∞" in message.raw_text or "–í –±–æ—é —É—á–∞—Å—Ç–≤–æ–≤–∞–ª–æ" in message.raw_text:
            self.tttk = False

    @loader.command()
    async def atkinfo(self,message):
        '''- –ö–æ–Ω—Ñ–∏–≥ –∞—Ç–∞–∫–∏'''
        if self.get('autk'):
            aa = '–í–∫–ª—é—á–µ–Ω–∞'
        else:
            aa = '–í—ã–∫–ª—é—á–µ–Ω–∞'
        if self.get('fwa'):
            fwaa = ' ‚ñ´Ô∏è <i>–í–∫–ª—é—á–∞—Ç—å –∞—Ç–∞–∫—É –ø–æ—Å–ª–µ FloodWait</i>\n'
        else: 
            fwaa = ''
        if self.get('combo'):
            cmb = ' ‚ñ´Ô∏è <i>–ù–µ —Å–±–∏–≤–∞—Ç—å –∫–æ–º–±–æ</i>\n'
        else: 
            cmb = ''
        await self.inline.form(
            text=f"<emoji document_id=5981043230160981261>‚è±</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏: </b><code>{self.get('dely')}</code>\n<b><emoji document_id=5463277406435422003>üó°</emoji> –°—Ç–∞—Ç—É—Å –∞—Ç–∞–∫–∏: </b><i>{aa}</i>\n<b>‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>\n{fwaa}{cmb}\n",
            message=message,
            reply_markup=[
                [
                    {
                        'text' : 'üó° –í–∫–ª/–≤—ã–∫–ª –∞—Ç–∞–∫—É',
                        'callback' : self.matutk
                    },
                    {
                        'text' : '‚è± –ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏',
                        'callback' : self.mdlya
                    }
                ],
                [ 
                    {
                        'text' : '‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã',
                        'callback' : self.aidd
                    }
                ],
                [
                    {
                        'text' : "üîª –ó–∞–∫—Ä—ã—Ç—å",
                        'action' : 'close'
                    }
                ]
            ]
        )
 
    async def matutk(self,call:InlineCall):
        self.set('autk', not self.get('autk'))
        if self.get('autk'):
            aa = '–í–∫–ª—é—á–µ–Ω–∞'
        else:
            aa = '–í—ã–∫–ª—é—á–µ–Ω–∞'
        if self.get('fwa'):
            fwaa = ' ‚ñ´Ô∏è <i>–í–∫–ª—é—á–∞—Ç—å –∞—Ç–∞–∫—É –ø–æ—Å–ª–µ FloodWait</i>\n'
        else: 
            fwaa = ''
        if self.get('combo'):
            cmb = ' ‚ñ´Ô∏è <i>–ù–µ —Å–±–∏–≤–∞—Ç—å –∫–æ–º–±–æ</i>\n'
        else: 
            cmb = ''
        await call.edit(
            text=f"<emoji document_id=5981043230160981261>‚è±</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏: </b><code>{self.get('dly')}</code>\n<b><emoji document_id=5463277406435422003>üó°</emoji> –°—Ç–∞—Ç—É—Å –∞—Ç–∞–∫–∏: </b><i>{aa}</i>\n<b>‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>\n{fwaa}{cmb}\n",
            reply_markup=[
              [
                    {
                        'text' : 'üó° –í–∫–ª/–≤—ã–∫–ª –∞—Ç–∞–∫—É',
                        'callback' : self.matutk
                    },
                    {
                        'text' : '‚è± –ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏',
                        'callback' : self.mdlya
                    }
                ],
                [ 
                    {
                        'text' : '‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã',
                        'callback' : self.aidd
                    }
                ],
                [
                    {
                        'text' : "üîª –ó–∞–∫—Ä—ã—Ç—å",
                        'action' : 'close'
                    }
                ]
            ]
        )
    async def afwa(self,call:InlineCall):
        self.set('fwa', not self.get('fwa'))
        if self.get('autk'):
            aa = '–í–∫–ª—é—á–µ–Ω–∞'
        else:
            aa = '–í—ã–∫–ª—é—á–µ–Ω–∞'
        if self.get('fwa'):
            fwaa = ' ‚ñ´Ô∏è <i>–í–∫–ª—é—á–∞—Ç—å –∞—Ç–∞–∫—É –ø–æ—Å–ª–µ FloodWait</i>\n'
        else: 
            fwaa = ''
        if self.get('combo'):
            cmb = ' ‚ñ´Ô∏è <i>–ù–µ —Å–±–∏–≤–∞—Ç—å –∫–æ–º–±–æ</i>\n'
        else: 
            cmb = ''
        
        await call.edit(
            text=f"<emoji document_id=5981043230160981261>‚è±</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏: </b><code>{self.get('dly')}</code>\n<b><emoji document_id=5463277406435422003>üó°</emoji> –°—Ç–∞—Ç—É—Å –∞—Ç–∞–∫–∏: </b><i>{aa}</i>\n<b>‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>\n{fwaa}{cmb}\n",
            reply_markup=[
                  [
                    {
                        'text' : '–í–æ–∑–æ–±–Ω–æ–≤–ª—è—Ç—å –∞—Ç–∞–∫—É –ø–æ—Å–ª–µ FloodWait',
                        'callback' : self.afwa
                    },
                 
                ],
                 [
                    {
                        'text' : '–Ω–µ —Å–±–∏–≤–∞—Ç—å –∫–æ–º–±–æ',
                        'callback' : self.acombo
                    },
                 
                ],


               
                [
                  {
                        'text' : 'üîô –ù–∞–∑–∞–¥',
                        'callback' : self.aback,
                    },
                    {
                        'text' : "üîª –ó–∞–∫—Ä—ã—Ç—å",
                        'action' : 'close'
                    }
                ]
            ]
        )
    async def acombo(self,call:InlineCall):
        self.set('combo', not self.get('combo'))
        if self.get('autk'):
            aa = '–í–∫–ª—é—á–µ–Ω–∞'
        else:
            aa = '–í—ã–∫–ª—é—á–µ–Ω–∞'
        if self.get('fwa'):
            fwaa = ' ‚ñ´Ô∏è <i>–í–∫–ª—é—á–∞—Ç—å –∞—Ç–∞–∫—É –ø–æ—Å–ª–µ FloodWait</i>\n'
        else: 
            fwaa = ''
        if self.get('combo'):
            cmb = ' ‚ñ´Ô∏è <i>–ù–µ —Å–±–∏–≤–∞—Ç—å –∫–æ–º–±–æ</i>\n'
        else: 
            cmb = ''
        
        await call.edit(
            text=f"<emoji document_id=5981043230160981261>‚è±</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏: </b><code>{self.get('dly')}</code>\n<b><emoji document_id=5463277406435422003>üó°</emoji> –°—Ç–∞—Ç—É—Å –∞—Ç–∞–∫–∏: </b><i>{aa}</i>\n<b>‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>\n{fwaa}{cmb}\n",
            reply_markup=[
                  [
                    {
                        'text' : '–í–æ–∑–æ–±–Ω–æ–≤–ª—è—Ç—å –∞—Ç–∞–∫—É –ø–æ—Å–ª–µ FloodWait',
                        'callback' : self.afwa
                    },
                 
                ],
                [
                    {
                        'text' : '–Ω–µ —Å–±–∏–≤–∞—Ç—å –∫–æ–º–±–æ',
                        'callback' : self.acombo
                    },
                 
                ],


               
                [
                  {
                        'text' : 'üîô –ù–∞–∑–∞–¥',
                        'callback' : self.aback,
                    },
                    {
                        'text' : "üîª –ó–∞–∫—Ä—ã—Ç—å",
                        'action' : 'close'
                    }
                ]
            ]
        )
    async def aidd(self,call:InlineCall):
        if self.get('autk'):
            aa = '–í–∫–ª—é—á–µ–Ω–∞'
        else:
            aa = '–í—ã–∫–ª—é—á–µ–Ω–∞'
        if self.get('fwa'):
            fwaa = ' ‚ñ´Ô∏è <i>–í–∫–ª—é—á–∞—Ç—å –∞—Ç–∞–∫—É –ø–æ—Å–ª–µ FloodWait</i>\n'
        else: 
            fwaa = ''
        if self.get('combo'):
            cmb = ' ‚ñ´Ô∏è <i>–ù–µ —Å–±–∏–≤–∞—Ç—å –∫–æ–º–±–æ</i>\n'
        else: 
            cmb = ''
        
        await call.edit(
            text=f"<emoji document_id=5981043230160981261>‚è±</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏: </b><code>{self.get('dly')}</code>\n<b><emoji document_id=5463277406435422003>üó°</emoji> –°—Ç–∞—Ç—É—Å –∞—Ç–∞–∫–∏: </b><i>{aa}</i>\n<b>‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>\n{fwaa}{cmb}\n",
            reply_markup=[
                  [
                    {
                        'text' : '–í–æ–∑–æ–±–Ω–æ–≤–ª—è—Ç—å –∞—Ç–∞–∫—É –ø–æ—Å–ª–µ FloodWait',
                        'callback' : self.afwa
                    },
                 
                ],
                 [
                    {
                        'text' : '–Ω–µ —Å–±–∏–≤–∞—Ç—å –∫–æ–º–±–æ',
                        'callback' : self.acombo
                    },
                 
                ],


               
                [
                  {
                        'text' : 'üîô –ù–∞–∑–∞–¥',
                        'callback' : self.aback,
                    },
                    {
                        'text' : "üîª –ó–∞–∫—Ä—ã—Ç—å",
                        'action' : 'close'
                    }
                ]
            ]
        )
    async def aback(self,call:InlineCall):
        if self.get('autk'):
            aa = '–í–∫–ª—é—á–µ–Ω–∞'
        else:
            aa = '–í—ã–∫–ª—é—á–µ–Ω–∞'
        if self.get('fwa'):
            fwaa = ' ‚ñ´Ô∏è <i>–í–∫–ª—é—á–∞—Ç—å –∞—Ç–∞–∫—É –ø–æ—Å–ª–µ FloodWait</i>\n'
        else: 
            fwaa = ''
        if self.get('combo'):
            cmb = ' ‚ñ´Ô∏è <i>–ù–µ —Å–±–∏–≤–∞—Ç—å –∫–æ–º–±–æ</i>\n'
        else: 
            cmb = ''

        await call.edit(
            text=f"<emoji document_id=5981043230160981261>‚è±</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏: </b><code>{self.get('dly')}</code>\n<b><emoji document_id=5463277406435422003>üó°</emoji> –°—Ç–∞—Ç—É—Å –∞—Ç–∞–∫–∏: </b><i>{aa}</i>\n<b>‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>\n{fwaa}{cmb}\n",
            reply_markup=[
                 [
                    {
                        'text' : 'üó° –í–∫–ª/–≤—ã–∫–ª –∞—Ç–∞–∫—É',
                        'callback' : self.matutk
                    },
                    {
                        'text' : '‚è± –ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏',
                        'callback' : self.mdlya
                    }
                ],
                [ 
                    {
                        'text' : '‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã',
                        'callback' : self.aidd
                    }
                ],
                [
                    {
                        'text' : "üîª –ó–∞–∫—Ä—ã—Ç—å",
                        'action' : 'close'
                    }
                ]
            ]
        )
 
    async def mdlya(self,call: InlineCall):
        if self.get('autk'):
            aa = '–í–∫–ª—é—á–µ–Ω–∞'
        else:
            aa = '–í—ã–∫–ª—é—á–µ–Ω–∞'
        if self.get('fwa'):
            fwaa = ' ‚ñ´Ô∏è <i>–í–∫–ª—é—á–∞—Ç—å –∞—Ç–∞–∫—É –ø–æ—Å–ª–µ FloodWait</i>\n'
        else: 
            fwaa = ''
        if self.get('combo'):
            cmb = ' ‚ñ´Ô∏è <i>–ù–µ —Å–±–∏–≤–∞—Ç—å –∫–æ–º–±–æ</i>\n'
        else: 
            cmb = ''
        await call.edit(
            text=f"<emoji document_id=5981043230160981261>‚è±</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏: </b><code>{self.get('dly')}</code>\n<b><emoji document_id=5463277406435422003>üó°</emoji> –°—Ç–∞—Ç—É—Å –∞—Ç–∞–∫–∏: </b><i>{aa}</i>\n\n<i><emoji document_id=5452069934089641166>‚ùì</emoji> –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –∞—Ç–∞–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ:\n</i><code>.atk [–∑–∞–¥–µ—Ä–∂–∫–∞]</code>",
            reply_markup=[
                [
                    {
                        'text' : 'üó° –í–∫–ª/–≤—ã–∫–ª –∞—Ç–∞–∫—É',
                        'callback' : self.matutk
                    },
                    {
                        'text' : '‚è± –ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏',
                        'callback' : self.mdlya
                    }
                ],
                [ 
                    {
                        'text' : '‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã',
                        'callback' : self.aidd
                    }
                ],
                [
                    {
                        'text' : "üîª –ó–∞–∫—Ä—ã—Ç—å",
                        'action' : 'close'
                    }
                ]
            ]
        )
 
        
    @loader.watcher()
    async def bosses_fw(self, message):
        dly = self.get('dly')
        if self.get('agas'):
            if self.get('mm'):
                if message.chat_id == 5522271758 and "–¢—ã –≤—ã–±—Ä–∞–ª –±–æ—Å—Å–∞" in message.raw_text:
                    self.bb = True
                    if self.get('combo'):
                        asyncio.create_task(self.mmine())  # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É mmine

        if self.bb:
            if message.chat_id == 5522271758 and "–¥–ª—è –∞—Ç–∞–∫–∏ –≤—ã–±–µ—Ä–∏ –±–æ—Å—Å–∞" in message.raw_text or "–í –±–æ—é —É—á–∞—Å—Ç–≤–æ–≤–∞–ª–æ" in message.raw_text:
                self.bb = False
                if self.get('combo'):
                    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ mmine
                    self.mine = False
                await self.kop()

    async def mmine(self):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–ø–∞–µ—Ç –∑–∞ –≤–∞—Å"""
        self.mine = True
        interval = 14
        while self.mine:
            await self.client.send_message("@mine_evo_bot", "–∫–æ–ø")
            await asyncio.sleep(interval)

        # –ï—Å–ª–∏ mine —Å—Ç–∞–ª False, –∑–∞–≤–µ—Ä—à–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
        if not self.mine:
            return



    
    @loader.command()
    async def kop(self, message):
        ''' - –í–∫–ª/–≤—ã–∫–ª –∫–æ–ø–∞–Ω–∏–µ'''
        args = utils.get_args_raw(message)
        cmd = f'{utils.escape_html(self.get_prefix())}{inspect.currentframe().f_code.co_name}'
        
        if args:
            cmd = f'{utils.escape_html(self.get_prefix())}{inspect.currentframe().f_code.co_name} {utils.get_args_raw(message)}'
        
        try:
            args = float(args)
            self.set('dly', args)
            await utils.answer(message, f"<emoji document_id=5332533929020761310>‚úÖ</emoji><b>–ó–∞–¥–µ—Ä–∂–∫–∞ –∫–æ–ø–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {args}</b> ")
        
        except ValueError:
            self.set('mm', not self.get('mm'))
            state = "–ö–æ–ø–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ" if self.get('mm') else "–ö–æ–ø–∞–Ω–∏–µ –≤—ã–∫–ª—é—á–µ–Ω–æ"
            await message.edit(f"‚õè <b>{state}</b>")
        
        while self.get('mm'):
            dly = self.get('dly')
            try:
                await self.client.send_message("@mine_evo_bot", "–∫–æ–ø")
                await asyncio.sleep(dly)
            except errors.FloodWaitError as f:
                self.set('mm', False)
                se = f.seconds
                see = se + 5
                if self.get('fw'):
                    await asyncio.sleep(see)
                    await self.kop(message)


    @loader.command()
    async def kopinfo(self,message):
        '''- –ö–æ–Ω—Ñ–∏–≥ –∫–æ–ø–∞–Ω–∏—è'''
        if self.get('agas'):
            dpg = ' ‚ñ´Ô∏è <i>–ü–∞—É–∑–∞ –Ω–∞ –≤—Ä–µ–º—è –±–æ—Å—Å–∞</i>\n'
        else:
            dpg = ''
        
        if self.get('fw'):
            dpf = ' ‚ñ´Ô∏è <i>–í–∫–ª—é—á–∞—Ç—å –∫–æ–ø–∞–Ω–∏–µ –ø–æ—Å–ª–µ FloodWait</i>\n'
        else: 
            dpf = ''
        
        if self.get('mm'):
            dpm = '–í–∫–ª—é—á–µ–Ω–æ'
        else:
            dpm = '–í—ã–∫–ª—é—á–µ–Ω–æ'
        
        await self.inline.form(
            text=f"<emoji document_id=5981043230160981261>‚è±</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –∫–æ–ø–∞–Ω–∏—è:</b> <code>{self.get('dly')}</code>\n‚õè <b>–°—Ç–∞—Ç—É—Å –∫–æ–ø–∞–Ω–∏—è:</b> <i>{dpm}</i>\n<b>‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>\n{dpg}{dpf}",
            message=message,
            reply_markup=[
                [
                    {
                        'text' : "–í–∫–ª—é—á–∏—Ç—å –∫–æ–ø–∞–Ω–∏–µ" if not self.get('mm') else "–í—ã–∫–ª—é—á–∏—Ç—å –∫–æ–ø–∞–Ω–∏–µ",
                        'callback' : self.ikop,
                    },
                    {
                        'text' : '‚è± –ó–∞–¥–µ—Ä–∂–∫–∞ –∫–æ–ø–∞–Ω–∏—è ',
                        'callback' : self.mdlym,
                    },
                ],
             
                [
                {
                        'text' : '‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã',
                        'callback' : self.idd,

                    },
                ],
                [
                    {
                        'text' : 'üîª –ó–∞–∫—Ä—ã—Ç—å',
                        'action' : 'close'
                    }
                ]
            ]
        )
    async def ikop(self,call:InlineCall):
        self.set('mm', not self.get('mm'))
        
        if self.get('mm'):
            dpm = "–ö–æ–ø–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ"
            asyncio.create_task(self.start_mining(call))  # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–ø–∞–Ω–∏–µ –≤ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–¥–∞—á–µ
        else:
            dpm = "–ö–æ–ø–∞–Ω–∏–µ –≤—ã–∫–ª—é—á–µ–Ω–æ"
        
        if self.get('agas'):
            dpg = ' ‚ñ´Ô∏è <i>–ü–∞—É–∑–∞ –Ω–∞ –≤—Ä–µ–º—è –±–æ—Å—Å–∞</i>\n'
        else:
            dpg = ''
        
        if self.get('fw'):
            dpf = ' ‚ñ´Ô∏è <i>–í–∫–ª—é—á–∞—Ç—å –∫–æ–ø–∞–Ω–∏–µ –ø–æ—Å–ª–µ FloodWait</i>\n'
        else: 
            dpf = ''
        
        if self.get('mm'):
            dpm = '–í–∫–ª—é—á–µ–Ω–æ'
        else:
            dpm = '–í—ã–∫–ª—é—á–µ–Ω–æ'
        await call.edit(
            text=f"<emoji document_id=5981043230160981261>‚è±</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –∫–æ–ø–∞–Ω–∏—è:</b> <code>{self.get('dly')}</code>\n‚õè <b>–°—Ç–∞—Ç—É—Å –∫–æ–ø–∞–Ω–∏—è:</b> <i>{dpm}</i>\n<b>‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>\n{dpg}{dpf}\n\n",
            reply_markup=[
                [
                    {
                        'text' : "–í–∫–ª—é—á–∏—Ç—å –∫–æ–ø–∞–Ω–∏–µ" if not self.get('mm') else "–í—ã–∫–ª—é—á–∏—Ç—å –∫–æ–ø–∞–Ω–∏–µ",
                        'callback' : self.ikop,
                    },
                    {
                        'text' : '‚è± –ó–∞–¥–µ—Ä–∂–∫–∞ –∫–æ–ø–∞–Ω–∏—è ',
                        'callback' : self.mdlym,
                    },
                ],
                [    

                    {
                        'text' : '‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã',
                        'callback' : self.idd,
                    },
                ],
                [
                    {
                        'text' : 'üîª –ó–∞–∫—Ä—ã—Ç—å',
                        'action' : 'close'
                    }
                ]
            ]
        )
    async def mdlym(self,call:InlineCall):
        if self.get('agas'):
            dpg = ' ‚ñ´Ô∏è <i>–ü–∞—É–∑–∞ –Ω–∞ –≤—Ä–µ–º—è –±–æ—Å—Å–∞</i>\n'
        else:
            dpg = ''
        
        if self.get('fw'):
            dpf = ' ‚ñ´Ô∏è <i>–í–∫–ª—é—á–∞—Ç—å –∫–æ–ø–∞–Ω–∏–µ –ø–æ—Å–ª–µ FloodWait</i>\n'
        else: 
            dpf = ''
        
        if self.get('mm'):
            dpm = '–í–∫–ª—é—á–µ–Ω–æ'
        else:
            dpm = '–í—ã–∫–ª—é—á–µ–Ω–æ'
        await call.edit(
            text=f"<emoji document_id=5981043230160981261>‚è±</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –∫–æ–ø–∞–Ω–∏—è:</b> <code>{self.get('dly')}</code>\n‚õè <b>–°—Ç–∞—Ç—É—Å –∫–æ–ø–∞–Ω–∏—è:</b> <i>{dpm}</i>\n<b>‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>\n{dpg}{dpf}\n\n<i><emoji document_id=5452069934089641166>‚ùì</emoji> –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –∫–æ–ø–∞–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ:\n</i><code>.kop [–∑–∞–¥–µ—Ä–∂–∫–∞]</code>",
            reply_markup=[
                [
                    {
                        'text' : "–í–∫–ª—é—á–∏—Ç—å –∫–æ–ø–∞–Ω–∏–µ" if not self.get('mm') else "–í—ã–∫–ª—é—á–∏—Ç—å –∫–æ–ø–∞–Ω–∏–µ",
                        'callback' : self.ikop,
                    },
                    {
                        'text' : '‚è± –ó–∞–¥–µ—Ä–∂–∫–∞ –∫–æ–ø–∞–Ω–∏—è ',
                        'callback' : self.mdlym,
                    },
                ],
                [    

                    {
                        'text' : '‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã',
                        'callback' : self.idd,
                    },
                ],
                [
                    {
                        'text' : 'üîª –ó–∞–∫—Ä—ã—Ç—å',
                        'action' : 'close'
                    }
                ]
            ]
        )
    async def iback(self,call:InlineCall):
        if self.get('agas'):
            dpg = ' ‚ñ´Ô∏è <i>–ü–∞—É–∑–∞ –Ω–∞ –≤—Ä–µ–º—è –±–æ—Å—Å–∞</i>\n'
        else:
            dpg = ''
        
        if self.get('fw'):
            dpf = ' ‚ñ´Ô∏è <i>–í–∫–ª—é—á–∞—Ç—å –∫–æ–ø–∞–Ω–∏–µ –ø–æ—Å–ª–µ FloodWait</i>\n'
        else: 
            dpf = ''
        
        if self.get('mm'):
            dpm = '–í–∫–ª—é—á–µ–Ω–æ'
        else:
            dpm = '–í—ã–∫–ª—é—á–µ–Ω–æ'

        await call.edit(
            text=f"<emoji document_id=5981043230160981261>‚è±</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –∫–æ–ø–∞–Ω–∏—è:</b> <code>{self.get('dly')}</code>\n‚õè <b>–°—Ç–∞—Ç—É—Å –∫–æ–ø–∞–Ω–∏—è:</b> <i>{dpm}</i>\n<b>‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>\n{dpg}{dpf}",
            reply_markup=[
                [
                    {
                        'text' : "–í–∫–ª—é—á–∏—Ç—å –∫–æ–ø–∞–Ω–∏–µ" if not self.get('mm') else "–í—ã–∫–ª—é—á–∏—Ç—å –∫–æ–ø–∞–Ω–∏–µ",
                        'callback' : self.ikop,
                    },
                    {
                        'text' : '‚è± –ó–∞–¥–µ—Ä–∂–∫–∞ –∫–æ–ø–∞–Ω–∏—è ',
                        'callback' : self.mdlym,
                    },
                ],
                [    

                    {
                        'text' : '‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã',
                        'callback' : self.idd,
                    },
                ],
                [
                    {
                        'text' : 'üîª –ó–∞–∫—Ä—ã—Ç—å',
                        'action' : 'close'
                    }
                ]
            ]
        )
    async def idd(self,call:InlineCall):
        if self.get('agas'):
            dpg = ' ‚ñ´Ô∏è <i>–ü–∞—É–∑–∞ –Ω–∞ –≤—Ä–µ–º—è –±–æ—Å—Å–∞</i>\n'
        else:
            dpg = ''
        
        if self.get('fw'):
            dpf = ' ‚ñ´Ô∏è <i>–í–∫–ª—é—á–∞—Ç—å –∫–æ–ø–∞–Ω–∏–µ –ø–æ—Å–ª–µ FloodWait</i>\n'
        else: 
            dpf = ''
        
        await call.edit(
            text=f'<b>‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>\n{dpg}{dpf}',
            reply_markup=[
                [
                    {
                        'text' : '–ü–∞—É–∑–∞ –Ω–∞ –≤—Ä–µ–º—è –±–æ—Å—Å–∞',
                        'callback' : self.ibs
                    },
                ],
                                [
                    {
                        'text' : '–ö–æ–ø–∞–Ω–∏–µ –ø–æ—Å–ª–µ FloodWait',
                        'callback' : self.ifs,
                    },
                ],
                [
                    {
                        'text' : 'üîô –ù–∞–∑–∞–¥',
                        'callback' : self.iback,
                    },
                    {
                        'text' : 'üîª –ó–∞–∫—Ä—ã—Ç—å',
                        'action' : 'close'
                    }
                ]
            ]
        )
   
    async def ibs(self,call:InlineCall):
        self.set('agas', not self.get('agas'))
        if self.get('agas'):
            dpg = ' ‚ñ´Ô∏è <i>–ü–∞—É–∑–∞ –Ω–∞ –≤—Ä–µ–º—è –±–æ—Å—Å–∞</i>\n'
        else:
            dpg = ''
        
        if self.get('fw'):
            dpf = ' ‚ñ´Ô∏è <i>–í–∫–ª—é—á–∞—Ç—å –∫–æ–ø–∞–Ω–∏–µ –ø–æ—Å–ª–µ FloodWait</i>\n'
        else: 
            dpf = ''
        
        await call.edit(
            text=f'<b>‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>\n{dpg}{dpf}',
            reply_markup=[
                [
                    {
                        'text' : '–ü–∞—É–∑–∞ –Ω–∞ –≤—Ä–µ–º—è –±–æ—Å—Å–∞',
                        'callback' : self.ibs
                    },
                ],
               
                [
                    {
                        'text' : '–ö–æ–ø–∞–Ω–∏–µ –ø–æ—Å–ª–µ FloodWait',
                        'callback' : self.ifs,
                    },
                ],
                [
                    {
                        'text' : 'üîô –ù–∞–∑–∞–¥',
                        'callback' : self.iback,
                    },
                    {
                        'text' : 'üîª –ó–∞–∫—Ä—ã—Ç—å',
                        'action' : 'close'
                    }
                ]
            ]
        )
    async def ifs(self,call:InlineCall):
        self.set('fw', not self.get('fw'))
        if self.get('agas'):
            dpg = ' ‚ñ´Ô∏è <i>–ü–∞—É–∑–∞ –Ω–∞ –≤—Ä–µ–º—è –±–æ—Å—Å–∞</i>\n'
        else:
            dpg = ''
        
        if self.get('fw'):
            dpf = ' ‚ñ´Ô∏è <i>–í–∫–ª—é—á–∞—Ç—å –∫–æ–ø–∞–Ω–∏–µ –ø–æ—Å–ª–µ FloodWait</i>\n'
        else: 
            dpf = ''
        
        await call.edit(
            text=f'<b>‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>\n{dpg}{dpf}',
            reply_markup=[
                [
                    {
                        'text' : '–ü–∞—É–∑–∞ –Ω–∞ –≤—Ä–µ–º—è –±–æ—Å—Å–∞',
                        'callback' : self.ibs
                    },
                ],
             
                [
                    {
                        'text' : '–ö–æ–ø–∞–Ω–∏–µ –ø–æ—Å–ª–µ FloodWait',
                        'callback' : self.ifs,
                    },
                ],
                [
                    {
                        'text' : 'üîô –ù–∞–∑–∞–¥',
                        'callback' : self.iback,
                    },
                    {
                        'text' : 'üîª –ó–∞–∫—Ä—ã—Ç—å',
                        'action' : 'close'
                    }
                ]
            ]
        )
    async def start_mining(self, call: InlineCall):
        while self.get('mm'):
            dly = self.get('dly')
            try:
                await self.client.send_message("@mine_evo_bot", "–∫–æ–ø")
                await asyncio.sleep(dly)
            except errors.FloodWaitError as f:
                self.set('mm', False)
                se = f.seconds 
                see = se + 5
                if self.get('fw'):
                    await asyncio.sleep(see)
                    await self.kop(call._event)
   
